"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inquirer = _interopRequireDefault(require("inquirer"));

var _getConfig = _interopRequireDefault(require("../getConfig"));

var _questions = require("../questions");

var _gitCommitExeca = _interopRequireDefault(require("./gitCommitExeca"));

var _sgcPrompt = _interopRequireDefault(require("./sgcPrompt"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const promptOrInitialCommit =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(function* (argv) {
    const config = (0, _getConfig.default)();
    const question = (0, _questions.initQuestion)(config);
    const message = (0, _questions.initMessage)(config);
    const answers = yield _inquirer.default.prompt(question);

    if (answers.initCommit) {
      yield (0, _gitCommitExeca.default)(message);
    } else {
      yield (0, _sgcPrompt.default)(argv);
    }
  });

  return function promptOrInitialCommit(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _default = promptOrInitialCommit;
exports.default = _default;