"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _execa = _interopRequireDefault(require("execa"));

var _chalk = _interopRequireDefault(require("chalk"));

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

var _tempDir = _interopRequireDefault(require("temp-dir"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const gitCommitExeca =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(function* (message, filename = 'retry') {
    const sgcTempDir = _path.default.join(_tempDir.default, 'sgc');

    const pathToRetryFile = _path.default.join(sgcTempDir, `${filename}.txt`);

    try {
      yield (0, _execa.default)('git', ['commit', '-m', message], {
        stdio: 'inherit'
      });
      return true;
    } catch (_) {
      console.error(_chalk.default.red('\nAn error occured. Try to resolve the previous errors and run following command:'));
      console.error(_chalk.default.green('sgc --retry'));
      yield _fsExtra.default.ensureDir(sgcTempDir);
      yield _fsExtra.default.writeFile(pathToRetryFile, message, 'utf8');
      return false;
    }
  });

  return function gitCommitExeca(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _default = gitCommitExeca;
exports.default = _default;